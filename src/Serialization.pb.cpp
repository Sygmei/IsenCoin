// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Serialization.proto

#include "Serialization.pb.hpp"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
class TransactionSerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TransactionSer>
      _instance;
} _TransactionSer_default_instance_;
class BlockSerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BlockSer>
      _instance;
} _BlockSer_default_instance_;
class FileSerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FileSer>
      _instance;
} _FileSer_default_instance_;
namespace protobuf_Serialization_2eproto {
void InitDefaultsTransactionSerImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_TransactionSer_default_instance_;
    new (ptr) ::TransactionSer();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::TransactionSer::InitAsDefaultInstance();
}

void InitDefaultsTransactionSer() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTransactionSerImpl);
}

void InitDefaultsBlockSerImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_Serialization_2eproto::InitDefaultsTransactionSer();
  {
    void* ptr = &::_BlockSer_default_instance_;
    new (ptr) ::BlockSer();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::BlockSer::InitAsDefaultInstance();
}

void InitDefaultsBlockSer() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsBlockSerImpl);
}

void InitDefaultsFileSerImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_Serialization_2eproto::InitDefaultsBlockSer();
  {
    void* ptr = &::_FileSer_default_instance_;
    new (ptr) ::FileSer();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::FileSer::InitAsDefaultInstance();
}

void InitDefaultsFileSer() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsFileSerImpl);
}

::google::protobuf::Metadata file_level_metadata[3];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TransactionSer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TransactionSer, sender_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TransactionSer, receiver_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TransactionSer, timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TransactionSer, amout_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TransactionSer, signature_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BlockSer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BlockSer, transaction_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BlockSer, current_hash_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BlockSer, previous_hash_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BlockSer, time_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FileSer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FileSer, block_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::TransactionSer)},
  { 10, -1, sizeof(::BlockSer)},
  { 19, -1, sizeof(::FileSer)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_TransactionSer_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_BlockSer_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_FileSer_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "Serialization.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\023Serialization.proto\"g\n\016TransactionSer\022"
      "\016\n\006sender\030\001 \001(\014\022\020\n\010receiver\030\002 \001(\014\022\021\n\ttim"
      "estamp\030\003 \001(\r\022\r\n\005amout\030\004 \001(\002\022\021\n\tsignature"
      "\030\005 \001(\014\"k\n\010BlockSer\022$\n\013transaction\030\001 \003(\0132"
      "\017.TransactionSer\022\024\n\014current_hash\030\002 \001(\005\022\025"
      "\n\rprevious_hash\030\003 \001(\005\022\014\n\004time\030\004 \001(\005\"#\n\007F"
      "ileSer\022\030\n\005block\030\001 \003(\0132\t.BlockSerb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 280);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Serialization.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_Serialization_2eproto

// ===================================================================

void TransactionSer::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TransactionSer::kSenderFieldNumber;
const int TransactionSer::kReceiverFieldNumber;
const int TransactionSer::kTimestampFieldNumber;
const int TransactionSer::kAmoutFieldNumber;
const int TransactionSer::kSignatureFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TransactionSer::TransactionSer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Serialization_2eproto::InitDefaultsTransactionSer();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:TransactionSer)
}
TransactionSer::TransactionSer(const TransactionSer& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sender_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sender().size() > 0) {
    sender_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sender_);
  }
  receiver_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.receiver().size() > 0) {
    receiver_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.receiver_);
  }
  signature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.signature().size() > 0) {
    signature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.signature_);
  }
  ::memcpy(&timestamp_, &from.timestamp_,
    static_cast<size_t>(reinterpret_cast<char*>(&amout_) -
    reinterpret_cast<char*>(&timestamp_)) + sizeof(amout_));
  // @@protoc_insertion_point(copy_constructor:TransactionSer)
}

void TransactionSer::SharedCtor() {
  sender_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  receiver_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  signature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&amout_) -
      reinterpret_cast<char*>(&timestamp_)) + sizeof(amout_));
  _cached_size_ = 0;
}

TransactionSer::~TransactionSer() {
  // @@protoc_insertion_point(destructor:TransactionSer)
  SharedDtor();
}

void TransactionSer::SharedDtor() {
  sender_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  receiver_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  signature_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TransactionSer::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TransactionSer::descriptor() {
  ::protobuf_Serialization_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Serialization_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TransactionSer& TransactionSer::default_instance() {
  ::protobuf_Serialization_2eproto::InitDefaultsTransactionSer();
  return *internal_default_instance();
}

TransactionSer* TransactionSer::New(::google::protobuf::Arena* arena) const {
  TransactionSer* n = new TransactionSer;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TransactionSer::Clear() {
// @@protoc_insertion_point(message_clear_start:TransactionSer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sender_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  receiver_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  signature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&amout_) -
      reinterpret_cast<char*>(&timestamp_)) + sizeof(amout_));
  _internal_metadata_.Clear();
}

bool TransactionSer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TransactionSer)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes sender = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_sender()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes receiver = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_receiver()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 timestamp = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float amout = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &amout_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes signature = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_signature()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TransactionSer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TransactionSer)
  return false;
#undef DO_
}

void TransactionSer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TransactionSer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes sender = 1;
  if (this->sender().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->sender(), output);
  }

  // bytes receiver = 2;
  if (this->receiver().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->receiver(), output);
  }

  // uint32 timestamp = 3;
  if (this->timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->timestamp(), output);
  }

  // float amout = 4;
  if (this->amout() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->amout(), output);
  }

  // bytes signature = 5;
  if (this->signature().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->signature(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:TransactionSer)
}

::google::protobuf::uint8* TransactionSer::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TransactionSer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes sender = 1;
  if (this->sender().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->sender(), target);
  }

  // bytes receiver = 2;
  if (this->receiver().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->receiver(), target);
  }

  // uint32 timestamp = 3;
  if (this->timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->timestamp(), target);
  }

  // float amout = 4;
  if (this->amout() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->amout(), target);
  }

  // bytes signature = 5;
  if (this->signature().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->signature(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TransactionSer)
  return target;
}

size_t TransactionSer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TransactionSer)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes sender = 1;
  if (this->sender().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->sender());
  }

  // bytes receiver = 2;
  if (this->receiver().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->receiver());
  }

  // bytes signature = 5;
  if (this->signature().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->signature());
  }

  // uint32 timestamp = 3;
  if (this->timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->timestamp());
  }

  // float amout = 4;
  if (this->amout() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TransactionSer::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TransactionSer)
  GOOGLE_DCHECK_NE(&from, this);
  const TransactionSer* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TransactionSer>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TransactionSer)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TransactionSer)
    MergeFrom(*source);
  }
}

void TransactionSer::MergeFrom(const TransactionSer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TransactionSer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.sender().size() > 0) {

    sender_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sender_);
  }
  if (from.receiver().size() > 0) {

    receiver_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.receiver_);
  }
  if (from.signature().size() > 0) {

    signature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.signature_);
  }
  if (from.timestamp() != 0) {
    set_timestamp(from.timestamp());
  }
  if (from.amout() != 0) {
    set_amout(from.amout());
  }
}

void TransactionSer::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TransactionSer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TransactionSer::CopyFrom(const TransactionSer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TransactionSer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransactionSer::IsInitialized() const {
  return true;
}

void TransactionSer::Swap(TransactionSer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TransactionSer::InternalSwap(TransactionSer* other) {
  using std::swap;
  sender_.Swap(&other->sender_);
  receiver_.Swap(&other->receiver_);
  signature_.Swap(&other->signature_);
  swap(timestamp_, other->timestamp_);
  swap(amout_, other->amout_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TransactionSer::GetMetadata() const {
  protobuf_Serialization_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Serialization_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BlockSer::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BlockSer::kTransactionFieldNumber;
const int BlockSer::kCurrentHashFieldNumber;
const int BlockSer::kPreviousHashFieldNumber;
const int BlockSer::kTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BlockSer::BlockSer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Serialization_2eproto::InitDefaultsBlockSer();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BlockSer)
}
BlockSer::BlockSer(const BlockSer& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      transaction_(from.transaction_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&current_hash_, &from.current_hash_,
    static_cast<size_t>(reinterpret_cast<char*>(&time_) -
    reinterpret_cast<char*>(&current_hash_)) + sizeof(time_));
  // @@protoc_insertion_point(copy_constructor:BlockSer)
}

void BlockSer::SharedCtor() {
  ::memset(&current_hash_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&time_) -
      reinterpret_cast<char*>(&current_hash_)) + sizeof(time_));
  _cached_size_ = 0;
}

BlockSer::~BlockSer() {
  // @@protoc_insertion_point(destructor:BlockSer)
  SharedDtor();
}

void BlockSer::SharedDtor() {
}

void BlockSer::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BlockSer::descriptor() {
  ::protobuf_Serialization_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Serialization_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BlockSer& BlockSer::default_instance() {
  ::protobuf_Serialization_2eproto::InitDefaultsBlockSer();
  return *internal_default_instance();
}

BlockSer* BlockSer::New(::google::protobuf::Arena* arena) const {
  BlockSer* n = new BlockSer;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BlockSer::Clear() {
// @@protoc_insertion_point(message_clear_start:BlockSer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  transaction_.Clear();
  ::memset(&current_hash_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&time_) -
      reinterpret_cast<char*>(&current_hash_)) + sizeof(time_));
  _internal_metadata_.Clear();
}

bool BlockSer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BlockSer)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .TransactionSer transaction = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_transaction()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 current_hash = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &current_hash_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 previous_hash = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &previous_hash_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 time = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BlockSer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BlockSer)
  return false;
#undef DO_
}

void BlockSer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BlockSer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .TransactionSer transaction = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->transaction_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->transaction(static_cast<int>(i)), output);
  }

  // int32 current_hash = 2;
  if (this->current_hash() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->current_hash(), output);
  }

  // int32 previous_hash = 3;
  if (this->previous_hash() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->previous_hash(), output);
  }

  // int32 time = 4;
  if (this->time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->time(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:BlockSer)
}

::google::protobuf::uint8* BlockSer::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BlockSer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .TransactionSer transaction = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->transaction_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->transaction(static_cast<int>(i)), deterministic, target);
  }

  // int32 current_hash = 2;
  if (this->current_hash() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->current_hash(), target);
  }

  // int32 previous_hash = 3;
  if (this->previous_hash() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->previous_hash(), target);
  }

  // int32 time = 4;
  if (this->time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->time(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BlockSer)
  return target;
}

size_t BlockSer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BlockSer)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .TransactionSer transaction = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->transaction_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->transaction(static_cast<int>(i)));
    }
  }

  // int32 current_hash = 2;
  if (this->current_hash() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->current_hash());
  }

  // int32 previous_hash = 3;
  if (this->previous_hash() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->previous_hash());
  }

  // int32 time = 4;
  if (this->time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->time());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BlockSer::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BlockSer)
  GOOGLE_DCHECK_NE(&from, this);
  const BlockSer* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BlockSer>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BlockSer)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BlockSer)
    MergeFrom(*source);
  }
}

void BlockSer::MergeFrom(const BlockSer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BlockSer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  transaction_.MergeFrom(from.transaction_);
  if (from.current_hash() != 0) {
    set_current_hash(from.current_hash());
  }
  if (from.previous_hash() != 0) {
    set_previous_hash(from.previous_hash());
  }
  if (from.time() != 0) {
    set_time(from.time());
  }
}

void BlockSer::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BlockSer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BlockSer::CopyFrom(const BlockSer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BlockSer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BlockSer::IsInitialized() const {
  return true;
}

void BlockSer::Swap(BlockSer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BlockSer::InternalSwap(BlockSer* other) {
  using std::swap;
  transaction_.InternalSwap(&other->transaction_);
  swap(current_hash_, other->current_hash_);
  swap(previous_hash_, other->previous_hash_);
  swap(time_, other->time_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BlockSer::GetMetadata() const {
  protobuf_Serialization_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Serialization_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FileSer::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FileSer::kBlockFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FileSer::FileSer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Serialization_2eproto::InitDefaultsFileSer();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:FileSer)
}
FileSer::FileSer(const FileSer& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      block_(from.block_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:FileSer)
}

void FileSer::SharedCtor() {
  _cached_size_ = 0;
}

FileSer::~FileSer() {
  // @@protoc_insertion_point(destructor:FileSer)
  SharedDtor();
}

void FileSer::SharedDtor() {
}

void FileSer::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FileSer::descriptor() {
  ::protobuf_Serialization_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Serialization_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FileSer& FileSer::default_instance() {
  ::protobuf_Serialization_2eproto::InitDefaultsFileSer();
  return *internal_default_instance();
}

FileSer* FileSer::New(::google::protobuf::Arena* arena) const {
  FileSer* n = new FileSer;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FileSer::Clear() {
// @@protoc_insertion_point(message_clear_start:FileSer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  block_.Clear();
  _internal_metadata_.Clear();
}

bool FileSer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:FileSer)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .BlockSer block = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_block()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:FileSer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:FileSer)
  return false;
#undef DO_
}

void FileSer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:FileSer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .BlockSer block = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->block_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->block(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:FileSer)
}

::google::protobuf::uint8* FileSer::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:FileSer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .BlockSer block = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->block_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->block(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FileSer)
  return target;
}

size_t FileSer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:FileSer)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .BlockSer block = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->block_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->block(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FileSer::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:FileSer)
  GOOGLE_DCHECK_NE(&from, this);
  const FileSer* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FileSer>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:FileSer)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:FileSer)
    MergeFrom(*source);
  }
}

void FileSer::MergeFrom(const FileSer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:FileSer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  block_.MergeFrom(from.block_);
}

void FileSer::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:FileSer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FileSer::CopyFrom(const FileSer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:FileSer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileSer::IsInitialized() const {
  return true;
}

void FileSer::Swap(FileSer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FileSer::InternalSwap(FileSer* other) {
  using std::swap;
  block_.InternalSwap(&other->block_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FileSer::GetMetadata() const {
  protobuf_Serialization_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Serialization_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
